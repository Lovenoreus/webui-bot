services:
  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - mcp_server
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
      - 'ENV=dev'
      - 'RESET_CONFIG_ON_START=True'
      - 'TOOL_SERVER_CONNECTIONS=[{"url": "http://mcp_server:8009", "path": "openapi.json", "auth_type": "none", "key": "", "config": {"enable": true, "access_control": null}, "info": {"id": "", "name": "MCP", "description": ""}}]'
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - mcp-network
    restart: unless-stopped

  database_server:
    build:
      context: ./docker
      dockerfile: DockerFile.database
    ports:
      - "8762:8762"
    volumes:
      - mcp_db_data:/app/database_data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8762/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  mcp_server:
    build:
      context: ./docker
      dockerfile: DockerFIle.mcp
    ports:
      - "8009:8009"
    depends_on:
      - database_server
    environment:
      - DATABASE_URL=http://database_server:8762
      - PYTHONPATH=/app
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

volumes:
  ollama: {}
  open-webui: {}
  mcp_db_data:

networks:
  mcp-network:
    driver: bridge
